Name: distributed
Version: 0.3.0
Synopsis: Library to provide Erlang style distributed computations. This library is inspired by Cloud Haskell.
Description: 
  Primitive for spawning processes (in the Erlang sense) either remotely or locally, monitoring/unmonitoring spawned processes, sending, 
  receiving, broadcasting messages to those processes. Unlike Erlang, the messages that are sent between processes are typed.
Authors: essdotteedot <essdotteedot@gmail.com>
Maintainers: essdotteedot <essdotteedot@gmail.com>
License: MIT

Description: Library to provide Erlang style distributed computations. This library is inspired by Cloud Haskell.
Homepage: https://github.com/essdotteedot/distributed

OASISFormat: 0.4
BuildTools: ocamlbuild
Plugins: META (0.4), DevFiles (0.4)
OCamlVersion: >= 4.02.3

Flag lwt
  Description: Build the Lwt wrapper
  Default: true

Library "distributed"
  Path: src
  CompiledObject: native
  Modules: Distributed
  InternalModules: Potpourri  

Library "distributed-lwt"
  Build$: flag(lwt)
  Install$: flag(lwt)
  FindLibName: lwt
  FindLibParent: distributed
  CompiledObject: native
  Path: src    
  Modules: Distributed_lwt
  BuildDepends: distributed, unix, lwt, lwt.unix, threads

Executable "test_distributed"
  Path: tests
  MainIs: test_distributed.ml
  Build$: flag(tests)
  CompiledObject: native
  Install: false
  BuildDepends: distributed, unix, lwt, lwt.unix, threads, oUnit (>= 2.0) 

Test "test_distributed"
  Run$: flag(tests)
  Command: $test_distributed
  WorkingDirectory: tests

Flag examples
  Description: Build the examples
  Default: false              

Executable "basic"
  Path: examples
  MainIs: basic.ml
  Build$: flag(examples) && flag(lwt)
  CompiledObject: native
  BuildDepends: distributed.lwt

Executable "ping"
  Path: examples
  MainIs: ping.ml
  Build$: flag(examples) && flag(lwt)
  CompiledObject: native
  BuildDepends: distributed.lwt

Executable "pong"
  Path: examples
  MainIs: pong.ml
  Build$: flag(examples) && flag(lwt)
  CompiledObject: native
  BuildDepends: distributed.lwt        

AlphaFeatures: ocamlbuild_more_args
Document "distributed-api"
  Type: ocamlbuild (0.4)
  BuildTools: ocamldoc

  Title: API reference for distributed
  XOCamlbuildPath: .
  XOCamlbuildExtraArgs: "-docflags '-colorize-code -short-functors -charset utf-8'"
  XOCamlbuildLibraries: distributed, distributed.lwt

SourceRepository master
  Type: git
  Location: https://github.com/essdotteedot/distributed.git
  Branch: master
  Browser: https://github.com/essdotteedot/distributed 

